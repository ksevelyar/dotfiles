# vim:ft=zsh ts=2 sw=2 sts=2
# NEOSAPIEN THEME
# https://imgur.com/a/CJ8CFYc

# Alias the colors.
[[ -z $(functions colors) ]] && autoload -U colors && colors
for color in red green yellow blue magenta cyan white grey black; do

  # Normal colors.
  eval $color='%F{${(L)color}}'

  # Bold colors.
  eval ${color}_bold='%B{${(L)color}}'
done

### Segments of the prompt, default order declaration
typeset -aHg neosapien_PROMPT_SEGMENTS=(
prompt_status
prompt_context
prompt_virtualenv
prompt_dir
prompt_end
)

### Segment drawing
# A few utility functions to make it easy and re-usable to draw segmented prompts

CURRENT_BG='NONE'
if [[ -z "$PRIMARY_FG" ]]; then
  PRIMARY_FG=black
fi

# Characters
SEGMENT_SEPARATOR=""
# PLUSMINUS="\u00b1"
BRANCH="\ue0a0"
DETACHED="\u27a6"
CROSS="\u2718"
LIGHTNING="\u26a1"
GEAR="\u2699"

# Begin a segment
# Takes two arguments, background and foreground. Both can be omitted,
# rendering default background/foreground.
prompt_segment() {
  local bg fg
  [[ -n $1 ]] && bg="%K{$1}" || bg="%k"
  [[ -n $2 ]] && fg="%F{$2}" || fg="%f"
  if [[ $CURRENT_BG != 'NONE' && $1 != $CURRENT_BG ]]; then
    print -n "%{$bg%F{$CURRENT_BG}%}$SEGMENT_SEPARATOR%{$fg%}"
  else
    print -n "%{$bg%}%{$fg%}"
  fi
  CURRENT_BG=$1
  [[ -n $3 ]] && print -n $3
}

# End the prompt, closing any open segments
prompt_end() {
  if [[ -n $CURRENT_BG ]]; then
    print -n "%{%k%F{$CURRENT_BG}%}$SEGMENT_SEPARATOR"
  else
    print -n "%{%k%}"
  fi
  print -n "%{%f%}"
  CURRENT_BG=''
}

### Prompt components
# Each component will draw itself, and hide itself if no information needs to be shown

# Context: user@hostname (who am I and where am I)
prompt_context() {
  if [[ -n "$SSH_CONNECTION" ]]; then
    prompt_segment '' default "${black}[${blue}%m${black}] "
  fi
}

# Git: branch/detached head, dirty status
prompt_git() {
  local ref

  ref="$vcs_info_msg_0_"

  if [[ -n "$ref" ]]; then
    if [[ "${ref/.../}" == "$ref" ]]; then
      ref="$ref"
    else
      ref="$DETACHED ${ref/.../}"
    fi

    print -n $ref
  fi
}

# Dir: current working directory
prompt_dir() {
  if [ "$EUID" -eq 0 ]; then
    bracket_o="%F{red}["
    bracket_c="%F{red}]"
  else
    bracket_o='%F{black}['
    bracket_c='%F{black}]'
  fi

  print -n "${bracket_o}%F{magenta}$(prompt-pwd)${bracket_c} "
}

# Status:
# - was there an error
# - am I root
# - are there background jobs?
prompt_status() {
  local symbols
  symbols=()
  [[ $(jobs -l | wc -l) -gt 0 ]] && symbols+="%F{magenta}% "

  [[ -n "$symbols" ]] && print -n "$symbols⚙ "
}

# Display current virtual environment
prompt_virtualenv() {
  if [[ -n $VIRTUAL_ENV ]]; then
    color=cyan
    prompt_segment $color $PRIMARY_FG
    print -Pn " $(basename $VIRTUAL_ENV) "
  fi
}

## Main prompt
prompt_neosapien_main() {
  RETVAL=$?
  CURRENT_BG='NONE'
  for prompt_segment in "${neosapien_PROMPT_SEGMENTS[@]}"; do
    [[ -n $prompt_segment ]] && $prompt_segment
  done
}

prompt_neosapien_precmd() {
  vcs_info
  PROMPT='%{%f%b%k%}$(prompt_neosapien_main)'
  RPROMPT=$(prompt_git)
}

prompt_neosapien_setup() {
  autoload -Uz add-zsh-hook
  autoload -Uz vcs_info

  prompt_opts=(cr subst percent)

  add-zsh-hook precmd prompt_neosapien_precmd

  zstyle ':vcs_info:*' enable git
  zstyle ':vcs_info:*' check-for-changes true
  zstyle ':vcs_info:*:*' unstagedstr '%F{yellow}'
  zstyle ':vcs_info:*:*' stagedstr '%F{green}'
  zstyle ':vcs_info:*:*' actionformats "%c%u  %F{magenta}%b%F{yellow}%a"
  zstyle ':vcs_info:*:*' formats       "%c%u  %F{magenta}%b"
}

prompt_neosapien_setup "$@"
