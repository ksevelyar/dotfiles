# Bindings
stty intr \^k # use ctrl-s instead of ctrl-c

# PATHS
export PATH="/home/ksevelyar/.npm-global/bin:$PATH"
export PATH="/home/ksevelyar/.local/bin:${PATH}"

if [[ ! $DISPLAY && $XDG_VTNR -eq 1 ]]; then
  exec startx
fi

source "$HOME/.homesick/repos/homeshick/homeshick.sh"
fpath=($HOME/.homesick/repos/homeshick/completions $fpath)

# APPS
[[ -s /etc/profile.d/autojump.sh ]] && . /etc/profile.d/autojump.sh

# FZF
# <CTRL+T> list files+folders in current directory (e.g., git commit <CTRL+T>, select a few files using <TAB>, finally <Return>)
# <CTRL+R> search history of shell commands
# <ALT+C> fuzzy change directory
# source /usr/share/fzf/key-bindings.zsh
source /usr/share/fzf/completion.zsh


iyay() {
  git clone https://aur.archlinux.org/yay.git
  cd yay
  makepkg -si
}

sync_bg() {
  local last_wallpaper=$(ls -dt1 /storage/Dropbox/pics/wallpapers/* | head -n 1)
  feh --bg-fill --image-bg 'black' $last_wallpaper
}

iruby() {
  curl -fsSL https://github.com/rbenv/rbenv-installer/raw/master/bin/rbenv-installer | bash
  local latest_stable_ruby=$(rbenv install -l | grep -v - | tail -1 | tr -d '[[:space:]]')

  rbenv install $latest_stable_ruby
  rbenv global $latest_stable_ruby
  gem install rails bundler pry pry-doc awesome_print neovim solargraph rubocop brakeman rails_best_practices slim_lint haml_lint
}

asdf_js() {
  asdf plugin-add nodejs
  bash ~/.asdf/plugins/nodejs/bin/import-release-team-keyring

  npm i -g stylelint-selector-bem-pattern stylelint-config-recommended-scss stylelint-scss stylelint eslint stylelint-config-standard eslint-config-airbnb-base tern eslint-plugin-vue eslint-plugin-import
  npm i -g prettier eslint-plugin-prettier
}
ipy() {
  pip install vim-vint
}

sync_mirrors() {
  pacman -S --noconfirm reflector
  sudo reflector --verbose --latest 5 --sort rate --save /etc/pacman.d/mirrorlist
}

itools() {
  yay -S --noconfirm ranger neovim ripgrep git diff-so-fancy gitg zsh autojump tmux vtop \
  wget curl aria2c \
  nerd-fonts-complete fzf fzf-extras mlocate ctags terminator ncdu \
  pigz pbzip2
}

#################
# CORE SETTINGS #
#################

#
# Zim settings
#

# Select what modules you would like enabled.
# The second line of modules may depend on options set by modules in the first
# line. These dependencies are noted on the respective module's README.md.
zmodules=(ssh autosuggestions archive directory environment git git-info history input utility custom \
          prompt completion syntax-highlighting history-substring-search pacman)


###################
# MODULE SETTINGS #
###################

#
# Prompt
#

# Set your desired prompt here
zprompt_theme='razor'

#
# Completion
#

# Set an optional host-specific filename for the completion cache file. If none
# is provided, the default '.zcompdump' is used.
#zcompdump_file=".zcompdump-${HOST}-${ZSH_VERSION}"

#
# Utility
#

# Uncomment to enable spelling correction prompt for commands. See:
# http://zsh.sourceforge.net/Doc/Release/Options.html#Input_002fOutput
#setopt CORRECT

# Set custom spelling correction prompt
#SPROMPT='zsh: correct %F{red}%R%f to %F{green}%r%f [nyae]? '

#
# Environment
#

# Set the string below to the desired terminal title format string.
# The terminal title is redrawn upon directory change, however, variables like
# ${PWD} are only evaluated once. Use prompt expansion strings for dynamic data:
#   http://zsh.sourceforge.net/Doc/Release/Prompt-Expansion.html#Simple-Prompt-Escapes
# The example below uses the following format: 'username@host:/current/directory'
ztermtitle='%n@%m:%~'

#
# Input
#

# Set to vi or emacs
zinput_mode='emacs'

# Uncomment to enable double-dot expansion. This appends '../' to your input for
# each '.' you type after an initial '..'
#zdouble_dot_expand='true'

#
# Syntax-Highlighting
#

# This determines what highlighters will be used with the syntax-highlighting module.
# Documentation of the highlighters can be found here:
#   https://github.com/zsh-users/zsh-syntax-highlighting/blob/master/docs/highlighters.md
# For (u)rxvt, termite and gnome-terminal users,
# removing the 'cursor' highlighter will fix the disappearing cursor problem
zhighlighters=(main brackets cursor)

#
# SSH
#

# Load these ssh identities with the ssh module
#zssh_ids=(id_rsa)

#
# Pacman
#

# Set (optional) pacman front-end.
zpacman_frontend='yay'

# Load any helper scripts as defined here
#zpacman_helper=(aur)
alias off='sleep 1; xset dpms force off'
alias pgrep='pgrep --full'
alias k='killall'

alias rs='bin/rails server webrick'
alias rc='bin/rails console'
alias db='bin/rails dbconsole'
alias rr="bin/rails runner"
